 'pipeline_RF' : {
        'pipeline' : Pipeline([
                            ('feature_extractor', TextPairFeatureExtractor()),
                            ('scaler', StandardScaler()),
                            ('classifier', RandomForestClassifier())]),
        'parameters' : {
                        'classifier__n_estimators': [100, 200, 300, 400, 500],
                        'classifier__max_depth': [None, 10, 20, 30, 40],
                        'classifier__min_samples_split': [2, 5, 10],
                        'classifier__min_samples_leaf': [1, 2, 4],
                        'classifier__max_features': ['auto', 'sqrt', 'log2'],
                        'feature_extractor__ngram_range': feature_extractor_ngram_range,
                        'feature_extractor__max_features': feature_extractor_max_features,
                        'feature_extractor__feature_type': feature_type
},
    },

    ,
    },
    'pipeline_LR' : {
        'pipeline' : Pipeline([
                            ('feature_extractor', TextPairFeatureExtractor()),
                            ('scaler', StandardScaler()),
                            ('classifier', LogisticRegression())]),
        'parameters' : {
                        'classifier__C': [0.01, 0.1, 1, 10],
                        'classifier__penalty': ['l1', 'l2', 'elasticnet'],
                        'classifier__solver': ['saga'],
                        'classifier__l1_ratio': np.linspace(0, 1, 10),
                        'feature_extractor__ngram_range': feature_extractor_ngram_range,
                        'feature_extractor__max_features': feature_extractor_max_features,
                        'feature_extractor__feature_type': feature_type
                    }
    }